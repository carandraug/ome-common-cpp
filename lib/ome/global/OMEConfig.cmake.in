@PACKAGE_INIT@

if (CMAKE_VERSION VERSION_LESS 3.2.0)
  message(FATAL_ERROR "OME requires at least CMake version 3.2.0")
endif()

if (NOT OME_FIND_COMPONENTS)
  set(OME_NOT_FOUND_MESSAGE "The OME package requires at least one component")
  set(OME_FOUND False)
  return()
endif()

set(_OME_FIND_PARTS_REQUIRED)
if (OME_FIND_REQUIRED)
  set(_OME_FIND_PARTS_REQUIRED REQUIRED)
endif()
set(_OME_FIND_PARTS_QUIET)
if (OME_FIND_QUIETLY)
  set(_OME_FIND_PARTS_QUIET QUIET)
endif()

get_filename_component(_ome_install_prefix "${CMAKE_CURRENT_LIST_DIR}/.." ABSOLUTE)

set(_OME_NOTFOUND_MESSAGE)

include(CMakeFindDependencyMacro)

foreach(module ${OME_FIND_COMPONENTS})
  find_dependency(OME${module}
    ${_OME_FIND_PARTS_QUIET}
    ${_OME_FIND_PARTS_REQUIRED})
  if (NOT OME${module}_FOUND)
    if (OME_FIND_REQUIRED_${module})
      set(_OME_NOTFOUND_MESSAGE "${_OME_NOTFOUND_MESSAGE}Failed to find OME component "${module}" config file at "${_ome_install_prefix}/OME${module}/OME${module}Config.cmake"n")
    elseif(NOT OME_FIND_QUIETLY)
      message(WARNING "Failed to find OME component "${module}" config file at "${_ome_install_prefix}/OME${module}/OME${module}Config.cmake"")
    endif()
  endif()
endforeach()

if (_OME_NOTFOUND_MESSAGE)
  set(OME_NOT_FOUND_MESSAGE "${_OME_NOTFOUND_MESSAGE}")
  set(OME_FOUND False)
endif()
